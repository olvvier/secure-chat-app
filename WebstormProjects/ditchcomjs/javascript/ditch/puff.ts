// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Pod } from '../ditch/pod.js';


export class Puff {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Puff {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPuff(bb:flatbuffers.ByteBuffer, obj?:Puff):Puff {
  return (obj || new Puff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPuff(bb:flatbuffers.ByteBuffer, obj?:Puff):Puff {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Puff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

time():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

pod(obj?:Pod):Pod|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Pod()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

duration1():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

intensity1():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

duration2():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

intensity2():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

static startPuff(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addTime(builder:flatbuffers.Builder, time:number) {
  builder.addFieldInt32(0, time, 0);
}

static addPod(builder:flatbuffers.Builder, podOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, podOffset, 0);
}

static addDuration1(builder:flatbuffers.Builder, duration1:number) {
  builder.addFieldInt32(2, duration1, 0);
}

static addIntensity1(builder:flatbuffers.Builder, intensity1:number) {
  builder.addFieldInt32(3, intensity1, 0);
}

static addDuration2(builder:flatbuffers.Builder, duration2:number) {
  builder.addFieldInt32(4, duration2, 0);
}

static addIntensity2(builder:flatbuffers.Builder, intensity2:number) {
  builder.addFieldInt32(5, intensity2, 0);
}

static endPuff(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishPuffBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedPuffBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

}
