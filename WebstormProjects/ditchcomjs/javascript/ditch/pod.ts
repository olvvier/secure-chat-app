// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class Pod {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Pod {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPod(bb:flatbuffers.ByteBuffer, obj?:Pod):Pod {
  return (obj || new Pod()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPod(bb:flatbuffers.ByteBuffer, obj?:Pod):Pod {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Pod()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

level1():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

level2():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startPod(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addLevel1(builder:flatbuffers.Builder, level1:number) {
  builder.addFieldInt8(1, level1, 0);
}

static addLevel2(builder:flatbuffers.Builder, level2:number) {
  builder.addFieldInt8(2, level2, 0);
}

static endPod(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPod(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, level1:number, level2:number):flatbuffers.Offset {
  Pod.startPod(builder);
  Pod.addId(builder, idOffset);
  Pod.addLevel1(builder, level1);
  Pod.addLevel2(builder, level2);
  return Pod.endPod(builder);
}
}
